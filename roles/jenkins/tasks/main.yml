---
# tasks file for jenkins
# include the distro-specific stuff
- include: debian.yml
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'

- include: rhel.yml
  when: ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux'

- name: Make sure the service is running so we can download the cli jar
  service: name=jenkins state=running

- name: Wait for Jenkins to start
  wait_for: port=8080 host=localhost delay=10

- name: Download Jenkins CLI so we can enabled/disabled modules
  get_url: url=http://localhost:8080/jnlpJars/jenkins-cli.jar dest=/root/jenkins-cli.jar

- name: Create the jenkins-user's SSH directory
  file: name=/var/lib/jenkins/.ssh state=directory owner=jenkins group=jenkins mode=0750

- name: Add the deploy public key to this Jenkins installation
  template: src=deploy_public_ssh_key.j2 dest=/var/lib/jenkins/.ssh/deploy.public mode=0644 owner=jenkins group=jenkins

- name: Add the deploy private key to this Jenkins installation
  template: src=deploy_private_ssh_key.j2 dest=/var/lib/jenkins/.ssh/deploy.private mode=0600 owner=jenkins group=jenkins

- name: Add the devopsguys Ansible Repo deploy private key to this Jenkins installation
  template: src=deploy_devopsguys_ansible_private_ssh_key.j2 dest=/var/lib/jenkins/.ssh/devopsguys_ansible.private mode=0600 owner=jenkins group=jenkins

- name: Install the Jenkins plugins
  command: "java -jar /root/jenkins-cli.jar -s http://localhost:8080/ install-plugin {{ item }}"
  with_items:
    - git
    - ansicolor
  notify:
    - Restart Jenkins

- name: Install the Customer-specific plugins where defined
  command: "java -jar /root/jenkins-cli.jar -s http://localhost:8080/ install-plugin {{ item }}"
  with_items:
    - customer_jenkins_plugins
  when: 
    - customer_jenkins_plugins is defined
  notify:
    - Restart Jenkins

- name: Tag agent with jenkins in dataloop
  command: /bin/dataloop-agent -a {{ dataloop_api_key }}  tags add  jenkins
